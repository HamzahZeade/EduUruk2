@model EduUruk.Models.ViewModels.PageForm

<!-- modal -->
<div id="AccessModal" class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <form asp-action="Create"
          class="modal-dialog modal-lg"
          data-ajax="true" data-ajax-loading="#loader" data-ajax-loading-duration="100" data-ajax-method="POST" data-ajax-success="CloseModelMeeting">

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.PageID)
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@EduUruk.Models.Resources.SysModelRes.AddingTitle</h4>
                <button type="button" class="close" data-bs-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">


                    <div class="form-group col-md-6">
                        <label class="text-bold-900">@Html.LabelFor(model => model.ArabicPageName, htmlAttributes: new { @class = "control-label" }) </label>
                        <small class="text-danger">*</small>
                        <div class="position-relative has-icon-left">
                            @Html.EditorFor(model => model.ArabicPageName, new { htmlAttributes = new { @class = "form-control" } })

                            <div class="form-control-position">
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.ArabicPageName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        <label class="text-bold-900">@Html.LabelFor(model => model.EnglishPageName, htmlAttributes: new { @class = "control-label" }) </label>
                        <small class="text-danger">*</small>
                        <div class="position-relative has-icon-left">

                            @Html.EditorFor(model => model.EnglishPageName, new { htmlAttributes = new { @class = "form-control" } })

                            <div class="form-control-position">
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.EnglishPageName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">


                    <div class="form-group col-md-12">
                        <label class="text-bold-900">@Html.LabelFor(model => model.PageURL, htmlAttributes: new { @class = "control-label" }) </label>
                        <small class="text-danger">*</small>
                        <div class="position-relative has-icon-left">
                            @Html.EditorFor(model => model.PageURL, new { htmlAttributes = new { @class = "form-control" } })

                            <div class="form-control-position">
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.PageURL, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="row">


                    <div class="form-group col-md-6">
                        <label class="text-bold-900">@Html.LabelFor(model => model.GroupID, htmlAttributes: new { @class = "control-label" }) </label>
                        <small class="text-danger">*</small>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(model => model.GroupID, new SelectList(Model.Groups, "Value", "Text"), htmlAttributes: new { @class = "form-control select2_1" })

                            <div class="form-control-position">
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        <label class="text-bold-900">@Html.LabelFor(model => model.PageIndex, htmlAttributes: new { @class = "control-label" }) </label>
                        <small class="text-danger">*</small>
                        <div class="position-relative has-icon-left">

                            @Html.EditorFor(model => model.PageIndex, new { htmlAttributes = new { @class = "form-control" } })

                            <div class="form-control-position">
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.PageIndex, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        <label class="text-bold-900">@Html.LabelFor(model => model.Ico, htmlAttributes: new { @class = "control-label" }) </label>
                        <small class="text-danger">*</small>
                        <div class="position-relative has-icon-left">
                            @Html.EditorFor(model => model.Ico, new { htmlAttributes = new { @class = "form-control" } })
                            <div class="form-control-position">
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.Ico, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary waves-effect waves-light">
                    <i class="fa fa-check"></i>
                    @EduUruk.Models.Resources.GeneralRes.BtnSaveText
                </button>
                <button type="button" id="BtnClose" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">
                    <i class="icon-action-undo"></i>
                    @EduUruk.Models.Resources.GeneralRes.BtnCancelText
                </button>
            </div>
        </div>
        <!-- /.modal-content -->
    </form> <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
