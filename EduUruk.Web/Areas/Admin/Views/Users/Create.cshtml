@model EduUruk.Models.ViewModels.UserForm

@{

}
<!-- modal -->
<div id="AccessModal" class="modal fade"  data-bs-backdrop="static" data-bs-keyboard="false"  tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <form action="/Admin/Users/Create"
          autocomplete="off" class="modal-dialog modal-lg"
          data-ajax="true" data-ajax-loading="#loader" data-ajax-loading-duration="100" data-ajax-method="POST" data-ajax-success="CloseModel"
          enctype="multipart/form-data" id="form0"
          method="post"
          novalidate="novalidate">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserId)
        <input type="hidden" asp-for=Createdby />
        <input type="hidden" asp-for=UpdatedBy />
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@EduUruk.Models.Resources.SysModelRes.AddingTitle</h4>
                <button type="button" class="close" data-bs-dismiss="modal"  aria-hidden="true">×</button>
            </div>
            <div class="card-body ">
                <div class="card-block">
                    <div class="modal-body">

                        <div class="row">
                            <div class="form-group col-md-6">
                                <label for="site-search">البحث باسم الستخدم </label>
                                <input type="search" id="search" name="search" class="form-control">
                            </div>
                        </div>
                       @* <div class="row">
                            <div class="form-group col-md-6">
                                <label class="text-bold-900">@Html.LabelFor(model => model.ArabicUserName, htmlAttributes: new { @class = "control-label" }) </label>
                                <small class="text-danger">*</small>
                                <div class="position-relative has-icon-left">
                                    @Html.EditorFor(model => model.ArabicUserName, new { htmlAttributes = new { @class = "form-control" } })
                                    <div class="form-control-position">
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.ArabicUserName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                <label class="text-bold-900">@Html.LabelFor(model => model.EnglishUserName, htmlAttributes: new { @class = "control-label" }) </label>
                                <small class="text-danger">*</small>
                                <div class="position-relative has-icon-left">

                                    @Html.EditorFor(model => model.EnglishUserName, new { htmlAttributes = new { @class = "form-control" } })

                                    <div class="form-control-position">
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.EnglishUserName, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label class="text-bold-900">@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" }) </label>
                                <small class="text-danger">*</small>
                                <div class="position-relative has-icon-left">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    <div class="form-control-position">
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                           
                        </div>
                        <div class="row">

                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.RoleIds, htmlAttributes: new { @class = "control-label" })
                                <small class="text-danger">*</small>
                                <div class="position-relative has-icon-left">

                                    @Html.ListBoxFor(model => model.RoleIds, new MultiSelectList(Model.Roles, "Value", "Text"), htmlAttributes: new { @class = "form-control multi-select hidden-input" })


                                    <div class="form-control-position">
                                        <i class=" icon-note"></i>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.RoleIds, "", new { @class = "text-danger" })

                            </div>
                        </div>

                     

                        <div class="row">
                            <div class="form-group col-md-6">
                                <label class="text-bold-900">@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" }) </label>
                                <small class="text-danger">*</small>
                                <div class="position-relative has-icon-left">

                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })

                                    <div class="form-control-position">
                                        <i class=" icon-user"></i>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                           
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-default waves-effect waves-light">
                    <i class="fa fa-user-plus"></i>
                    @EduUruk.Models.Resources.GeneralRes.BtnSaveText
                </button>
                <button type="button" id="BtnClose" class="btn btn-secondary waves-effect" data-bs-dismiss="modal" >
                    <i class="icon-action-undo"></i>
                    @EduUruk.Models.Resources.GeneralRes.BtnCancelText
                </button>
            </div>
        </div>
        <!-- /.modal-content -->
    </form>
</div>
<!-- /.modal -->


 