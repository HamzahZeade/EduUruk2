@model PageForm

<!-- modal -->
<div id="AccessModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <form asp-action="Create"  
           class="modal-dialog modal-lg"
          data-ajax="true" data-ajax-loading="#loader" data-ajax-loading-duration="100" data-ajax-method="POST" data-ajax-success="CloseModel"
          >
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.PageID)
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@SysModelRes.AddingTitle</h4>
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal"><span class="svg-icon svg-icon-1"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black"></rect><rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black"></rect></svg></span></div>
            </div>
            <div class="modal-body">
                <div class="form-floating  mb-7">
                    @Html.EditorFor(model => model.ArabicPageName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.ArabicPageName, htmlAttributes: new { @class = "control-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.ArabicPageName, "", new { @class = "text-danger" })
                </div>
                <div class="form-floating  mb-7">
                    @Html.EditorFor(model => model.EnglishPageName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.EnglishPageName, htmlAttributes: new { @class = "control-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.EnglishPageName, "", new { @class = "text-danger" })
                </div>
                <div class="form-floating  mb-7">
                    @Html.EditorFor(model => model.PageURL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.PageURL, htmlAttributes: new { @class = "control-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.PageURL, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.GroupID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.GroupID, new SelectList(Model.Groups, "Value", "Text"), htmlAttributes: new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
                </div>
                <div class="form-floating  mb-7">
                    @Html.EditorFor(model => model.PageIndex, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.PageIndex, htmlAttributes: new { @class = "control-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.PageIndex, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary waves-effect waves-light">
                    <i class="fa fa-check"></i>
                    @GeneralRes.BtnSaveText
                </button>
                <button type="button" id="BtnClose" class="btn btn-secondary waves-effect" data-bs-dismiss="modal" >
                    <i class="fa fa-undo"></i>
                    @GeneralRes.BtnCancelText
                </button>
            </div>
        </div>
        <!-- /.modal-content -->
    </form>
</div>
<!-- /.modal -->
