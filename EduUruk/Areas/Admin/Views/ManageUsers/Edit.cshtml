@model UserForm

<!-- modal -->
<div id="AccessModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <form asp-action="Edit"  
           class="modal-dialog modal-lg"
          data-ajax="true" data-ajax-loading="#loader" data-ajax-loading-duration="100" data-ajax-method="POST" data-ajax-success="CloseModel"
          >
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserId)
        <input type="hidden" asp-for="Photo"/> 
        <input type="hidden" asp-for="IsJournal"/> 
        <input type="hidden" asp-for="ManagerID"/> 
        <input type="hidden" asp-for="RoleIds"/>
        <input type="hidden" asp-for="Roles"/>
         <input type="hidden" asp-for="UserName"/>
         <input type="hidden" asp-for="use_local_pass"/>

        
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@SysModelRes.EditTitle</h4>
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal"><span class="svg-icon svg-icon-1"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black"></rect><rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black"></rect></svg></span></div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12 col-xs-12">
                        <div class="row">
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.ArabicUserName, new { htmlAttributes = new { @class = "form-control has-value" } })
                                    @Html.LabelFor(model => model.ArabicUserName, htmlAttributes: new { @class = "control-label" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.ArabicUserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.EnglishUserName, new { htmlAttributes = new { @class = "form-control has-value" } })
                                    @Html.LabelFor(model => model.EnglishUserName, htmlAttributes: new { @class = "control-label" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.EnglishUserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                             
                        </div>
                        <div class="row">
                             <div class="col-sm-4 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control has-value" } })
                                    @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-4 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control has-value",@disabled="disabled" } })
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-4 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control has-value" } })
                                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            </div>
                            <div class="row">
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.countries, "Value", "Text"), htmlAttributes: new { @class = "form-select", @data_control="select2" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                              <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.LabelFor(model => model.NationalityId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.NationalityId, new SelectList(Model.nationalities, "Value", "Text"), htmlAttributes: new { @class = "form-select", @data_control="select2" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                           <div class="row">

                           
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OrgnaizationId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.OrgnaizationId, new SelectList(Model.Orgs, "Value", "Text"), htmlAttributes: new { @class = "form-select", @data_control="select2" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.OrgnaizationId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                              <div class="col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AgancyCategoryId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.AgancyCategoryId, new SelectList(Model.Agancies, "Value", "Text"), htmlAttributes: new { @class = "form-select", @data_control="select2" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.AgancyCategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="separator my-10"></div>

                    <div class="row">
                       
                        <div class="col-sm-4 col-xs-12">
                            <div class="mb-10">

                                <label class="form-check form-switch form-check-custom form-check-solid" asp-for="IsActivated">
                                    <input class="form-check-input" asp-for="IsActivated" type="checkbox" value=""  />
                                    <span class="form-check-label">
                                        @_localizer["IsActivated"]
                                    </span>
                                </label>
                            </div>
                        </div>
                        <div class="col-sm-4 col-xs-12">
                            <div class="mb-7">
                                <input asp-for="RequierdChangePass" type="checkbox" autocomplete="off" class="form-check-input form-check-danger">
                                @*@Html.EditorFor(model => model.Complate_Precent, new { htmlAttributes = new { @class = "has-value" } })*@
                                @Html.LabelFor(model => model.RequierdChangePass, htmlAttributes: new { @class = "form-check-label" })
                                <i class="bar"></i>
                                @Html.ValidationMessageFor(model => model.RequierdChangePass, "", new { @class = "text-danger" })
                                <div class="form-check form-check-custom form-check-solid">
                                </div>
                            </div>
                           
                        </div>
                        <div class="col-sm-4 col-xs-12">
                             <div class="form-floating  mb-7">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                <i class="bar"></i>
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                    </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary waves-effect waves-light">
                    <i class="fa fa-save"></i>
                    @GeneralRes.BtnEditText
                </button>
                <button type="button" id="BtnClose" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">
                    <i class="fa fa-undo"></i>
                    @GeneralRes.BtnCancelText
                </button>
            </div>
        </div>
        <!-- /.modal-content -->
    </form>
</div>
<!-- /.modal -->
