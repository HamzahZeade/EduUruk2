@model UserForm

<!-- modal -->
    <div id="AccessModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <form asp-action="Create"  
           class="modal-dialog modal-lg"
          data-ajax="true" data-ajax-loading="#loader" data-ajax-loading-duration="100" data-ajax-method="POST" data-ajax-success="CloseModel"
          >
 
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserId)
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@SysModelRes.AddingTitle</h4>
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal"><span class="svg-icon svg-icon-1"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black"></rect><rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black"></rect></svg></span></div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-8 col-xs-12">
                        <label for="site-search">Search by name in Active Directory </label>
                        <input type="search" id="search" name="search" class="form-control">
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-sm-8 col-xs-12">
                        <div class="row">
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.ArabicUserName, new { htmlAttributes = new { @class = "form-control ArabicUserName"  } })
                                    @Html.LabelFor(model => model.ArabicUserName, htmlAttributes: new { @class = "control-label ArabicUserName" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.ArabicUserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.EnglishUserName, new { htmlAttributes = new { @class = "form-control EnglishUserName" } })
                                    @Html.LabelFor(model => model.EnglishUserName, htmlAttributes: new { @class = "control-label EnglishUserName" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.EnglishUserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control Email" } })
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label Email" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-floating  mb-7">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control Mobile" } })
                                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label Mobile" })
                                    <i class="bar"></i>
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                              <div class="col-sm-6 col-xs-12">
                                <div class="mb-10">
                                      @*  <input class="" type="checkbox" value="" checked="checked" name="IsPublished" id="IsPublished"/>
                                        <label class="form-check-label" for="flexCheckDefault">
                                            @_localizer["lbl_Publish_Folder"]
                                        </label>*@
                                    <label class="form-check form-switch form-check-custom form-check-solid" asp-for="IsActivated">
                                        <input class="form-check-input" asp-for="IsActivated" type="checkbox" value=""/>
                                        <span class="form-check-label">
                                          @_localizer["IsActivated"]
                                        </span>
                                    </label>
                                </div>
                            </div>
                             <div class="col-sm-6 col-xs-12">
                                <div class="mb-10">
                                      @*  <input class="" type="checkbox" value="" checked="checked" name="IsPublished" id="IsPublished"/>
                                        <label class="form-check-label" for="flexCheckDefault">
                                            @_localizer["lbl_Publish_Folder"]
                                        </label>*@
                                    <label class="form-check form-switch form-check-custom form-check-solid" asp-for="IsJournal">
                                        <input class="form-check-input" asp-for="IsJournal" type="checkbox" value=""  />
                                        <span class="form-check-label">
                                          @_localizer["IsJournal"]
                                        </span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4 col-xs-12">
                        <div class="row">
                            <div class="col-sm-12 col-xs-12">
                              @*  <div class="form-group">
                                    @Html.TextBoxFor(model => model.Photo, new Dictionary<string, object> { { "data-rel", "imgControl" }, { "class", "hidden-input" } })
                                    @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                                    <div id="imageInput" class="upload-container" data-rel="imgContent"></div>
                                    <input type="file" data-rel="upload" id="fileUpload" />
                                </div>*@
                                  <div class="dropzone dz_file" id="kt_dropzonejs_example_1" dz-paramName="files" dz-maxFiles="2" df-maxFilesize="10" dz-url="/admin/users/UploadImage" >
                                     @*<input type="hidden" class="dropzonejs_hf" id="dropzonejs_hf" name="Photo" />*@
            <!--begin::Message-->
            <div class="dz-message needsclick">
                <!--begin::Icon-->
                <i class="bi bi-file-earmark-arrow-up text-primary fs-3x"></i>
                <!--end::Icon-->

                <!--begin::Info-->
                <div class="ms-4">
                    <h3 class="fs-5 fw-bolder text-gray-900 mb-1">Drop files here or click to upload.</h3>
                    <span class="fs-7 fw-bold text-gray-400">Upload up to 10 files</span>
                </div>
                <!--end::Info-->
            </div>
        </div>
        <!--end::Dropzone-->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-sm-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ERP_ORG_ID, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.ERP_ORG_ID, new SelectList(Model.Orgs, "Value", "Text"), htmlAttributes: new { @class = "form-select", @data_control="select2" })
                            <i class="bar"></i>
                            @Html.ValidationMessageFor(model => model.ERP_ORG_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                      <div class="col-sm-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AgancyCategoryId, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.AgancyCategoryId, new SelectList(Model.Agancies, "Value", "Text"), htmlAttributes: new { @class = "form-select", @data_control="select2" })
                            <i class="bar"></i>
                            @Html.ValidationMessageFor(model => model.AgancyCategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RoleIds, htmlAttributes: new { @class = "control-label" })
                            @Html.ListBoxFor(model => model.RoleIds, new MultiSelectList(Model.Roles, "Value", "Text"), htmlAttributes: new { @class = "form-control multi-select hidden-input" })
                            <i class="bar"></i>
                            @Html.ValidationMessageFor(model => model.RoleIds, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    @*<div class="col-sm-4 col-xs-12">
                <div class="form-floating  mb-7">
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "has-value" } })
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>
                    <div class="col-sm-4 col-xs-12">
                        <div class="form-floating  mb-7">
                            @Html.EditorFor(model => model.IdentityExpirationDate, new { htmlAttributes = new { @class = "date-islamic has-value", @autocomplete = "off" }, @autocomplete = "off" })
                            @Html.LabelFor(model => model.IdentityExpirationDate, htmlAttributes: new { @class = "control-label" })
                            <i class="bar"></i>
                            @Html.ValidationMessageFor(model => model.IdentityExpirationDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-4 col-xs-12">
                        <div class="form-floating  mb-7">
                            @Html.TextBoxFor(model => model.ContractExpirationDate, new { @class = "datepicker has-value", @autocomplete = "off" })
                            @Html.LabelFor(model => model.ContractExpirationDate, htmlAttributes: new { @class = "control-label" })
                            <i class="bar"></i>
                            @Html.ValidationMessageFor(model => model.ContractExpirationDate, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                </div>
                <div class="separator my-10"></div>

                <div class="row">
                    <div class="col-sm-4 col-xs-12">
                        <div class="form-floating  mb-7">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control UserName" } })
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label UserName" })
                            <i class="bar"></i>
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
            <div class="col-sm-4 col-xs-12">
                <div class="form-floating  mb-7">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
              <div class="col-sm-6 col-xs-12">
                <div class="mb-7">
                    <input asp-for="use_local_pass" type="checkbox" autocomplete="off" class="form-check-input form-check-danger">
                    @Html.LabelFor(model => model.AllOrg, htmlAttributes: new { @class = "form-check-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.AllOrg, "", new { @class = "text-danger" })
                    <div class="form-check form-check-custom form-check-solid">
                    </div>
                </div>
            </div>
             <div class="col-sm-6 col-xs-12">
                <div class="mb-7">
                    <input asp-for="use_local_pass" type="checkbox" autocomplete="off" class="form-check-input form-check-danger">
                    @*@Html.EditorFor(model => model.Complate_Precent, new { htmlAttributes = new { @class = "has-value" } })*@
                    @Html.LabelFor(model => model.use_local_pass, htmlAttributes: new { @class = "form-check-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.use_local_pass, "", new { @class = "text-danger" })
                    <div class="form-check form-check-custom form-check-solid">
                    </div>
                </div>
            </div>
             
             <div class="col-sm-6 col-xs-12">
                <div class="mb-7">
                    <input asp-for="RequierdChangePass" type="checkbox" autocomplete="off" class="form-check-input form-check-danger">
                    @*@Html.EditorFor(model => model.Complate_Precent, new { htmlAttributes = new { @class = "has-value" } })*@
                    @Html.LabelFor(model => model.RequierdChangePass, htmlAttributes: new { @class = "form-check-label" })
                    <i class="bar"></i>
                    @Html.ValidationMessageFor(model => model.RequierdChangePass, "", new { @class = "text-danger" })
                    <div class="form-check form-check-custom form-check-solid">
                    </div>
                </div>
            </div>
                </div>


            </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary waves-effect waves-light">
                            <i class="fa fa-save"></i>
                            @GeneralRes.BtnSaveText
                        </button>
                        <button type="button" id="BtnClose" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">
                            <i class="fa fa-undo"></i>
                            @GeneralRes.BtnCancelText
                        </button>
                    </div>
                </div>
                <!-- /.modal-content -->
               </form>
            </div>
<!-- /.modal -->
